<% @title ||= @project.title; title @title %>
<%= go_back_btn admin_question_sequences_path, mb: 'mb-4' %>
<% content_for :disable_turbolinks, 'data-turbolinks=false' %>

<div class="row justify-content-center mb-4">
  <div class="col-12 col-md-10 col-lg-8">
    <% if @mode == 'mturk' %>
      <h2 class='mb-4'>Question Sequence (Mturk interface)</h2>
      <%= form_tag admin_question_sequence_path, enforce_utf8: false, method: :get, class: 'mb-4' do %>
        <%= hidden_field_tag 'mode', 'mturk' %>
        <div>
          <%= label_tag 'workerId', 'Worker ID' %>
          <%= text_field_tag 'workerId', @worker_id %>
        </div>
        <div>
          <%= label_tag 'hitId', 'HIT ID' %>
          <%= text_field_tag 'hitId', @hit_id %>
        </div>
        <div>
          <%= label_tag 'preview_mode', 'Preview mode' %>
          <%= hidden_field_tag 'preview_mode', 'false' %>
          <%= check_box_tag 'preview_mode', 'true', @preview_mode %>
        </div>
        <div class="form-actions">
          <%= submit_tag 'Refresh', class: 'btn btn-secondary', name: nil %>
        </div>
      <% end %>

    <% elsif @mode == 'public' %>
      <h2 class='mb-4'>Question Sequence (public interface)</h2>
    <% end %>
    <p style="color:red;">Working in test mode. No results are collected.</p>
  </div>
</div>


<div class="row justify-content-center" style="border:1px solid;">
  <div id="qs-root" class="col-12 text-center">
    <% if  @mode == 'mturk'%>
      <%= react_component('MturkQSContainer', {
        mturkTitle: @project.title,
        questions: @question_sequence[:questions],
        initialQuestionId: @question_sequence[:initial_question_id],
        transitions: @question_sequence[:transitions],
        tweetId: @tweet_id,
        resultsPath: mturk_question_sequence_url,
        finalSubmitPath: final_mturk_question_sequence_url,
        projectId: @project.id,
        delayStart: 2000,
        delayNextQuestion: 2000,
        testMode: true,
        previewMode: @preview_mode,
        sandbox: @sandbox,
        allowReset: true,
        instructions: @mturk_instructions,
        helpEmail: ENV['MTURK_CONTACT_EMAIL'],
        hitId: @hit_id,
        assignmentId: @assignment_id,
        workerId: @worker_id,
        notification: @notification,
        translations: t('question_sequences', locale: @project.locales&.first || :en), # force locale value to be that of project
      }) %>
    <% elsif @mode == 'public' %>
      <%= react_component('QSContainer', {
        projectTitle: @project.title,
        questions: @question_sequence[:questions],
        initialQuestionId: @question_sequence[:initial_question_id],
        transitions: @question_sequence[:transitions],
        tweetId: @tweet_id,
        projectsPath: projects_path,
        resultsPath: nil,
        endQuestionSequencePath: final_project_question_sequence_path(@project.id),
        translations: t('question_sequences'),
        userId: @user_id,
        projectId: @project.id,
        numTransitions: @question_sequence[:num_transitions],
        captchaSiteKey: ENV['RECAPTCHA_SITEKEY'],
        enableCaptcha: false,
        userSignedIn: user_signed_in?,
        delayStart: 2000,
        delayNextQuestion: 0,
        testMode: true
      }) %>
  <% end %>
  </div>
</div>
